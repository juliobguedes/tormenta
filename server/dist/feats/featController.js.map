{"version":3,"sources":["../../src/feats/featController.js"],"names":["router","express","Router","get","req","res","featService","getFeats","cache","then","feats","put","status","send","error","message","featId","params","id","getFeatById","feat"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AAEAF,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BC,EAAAA,WAAW,CAACC,QAAZ,CAAqBC,wBAAML,GAAN,CAAU,UAAV,CAArB,EAA4CM,IAA5C,CAAiD,UAACC,KAAD,EAAW;AACxDF,4BAAMG,GAAN,CAAU,UAAV,EAAsBD,KAAtB;;AACAL,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,KAArB;AACH,GAHD,WAGS,UAACI,KAAD,EAAW;AAAA,QACRC,OADQ,GACID,KADJ,CACRC,OADQ;AAEhBV,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,MAAAA,OAAO,EAAPA;AAAF,KAArB;AACH,GAND;AAOH,CARD;AAUAf,MAAM,CAACG,GAAP,CAAW,MAAX,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,MACjBW,MADiB,GACNZ,GAAG,CAACa,MADE,CACrBC,EADqB;AAE7BZ,EAAAA,WAAW,CAACa,WAAZ,CAAwBH,MAAxB,EAAgCR,wBAAML,GAAN,CAAUa,MAAV,CAAhC,EAAmDP,IAAnD,CAAwD,UAACW,IAAD,EAAU;AAC9DZ,4BAAMG,GAAN,CAAUK,MAAV,EAAkBI,IAAlB;;AACAf,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBO,IAArB;AACH,GAHD,WAGS,UAACN,KAAD,EAAW;AAAA,QACRC,OADQ,GACID,KADJ,CACRC,OADQ;AAEhBV,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,MAAAA,OAAO,EAAPA;AAAF,KAArB;AACH,GAND;AAOH,CATD;AAWAf,MAAM,CAACG,GAAP,CAAW,SAAX,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChCA,EAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,IAAAA,MAAM,EAAE;AAAV,GAArB;AACH,CAFD;eAIeZ,M","sourcesContent":["import express from 'express';\nimport cache from 'memory-cache';\nimport * as featService from './featService';\n\nconst router = express.Router();\n\nrouter.get('/', (req, res) => {\n    featService.getFeats(cache.get('allFeats')).then((feats) => {\n        cache.put('allFeats', feats);\n        res.status(200).send(feats);\n    }).catch((error) => {\n        const { message } = error;\n        res.status(400).send({ message });\n    });\n});\n\nrouter.get('/:id', (req, res) => {\n    const { id: featId } = req.params;\n    featService.getFeatById(featId, cache.get(featId)).then((feat) => {\n        cache.put(featId, feat);\n        res.status(200).send(feat);\n    }).catch((error) => {\n        const { message } = error;\n        res.status(400).send({ message });\n    });\n});\n\nrouter.get('/health', (req, res) => {\n    res.status(200).send({ status: 'Feat Controller is up and running' });\n})\n\nexport default router;\n"],"file":"featController.js"}
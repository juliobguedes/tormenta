{"version":3,"sources":["../../src/character/characterController.js"],"names":["router","express","Router","get","req","res","hash","params","characterService","getCharacter","cache","then","char","put","status","send","err","message","character","body","updateCharacter","post","createCharacter","console","log"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AAEAF,MAAM,CAACG,GAAP,CAAW,QAAX,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,MACvBC,IADuB,GACdF,GAAG,CAACG,MADU,CACvBD,IADuB;AAE/BE,EAAAA,gBAAgB,CAACC,YAAjB,CAA8BH,IAA9B,EAAoCI,wBAAMP,GAAN,CAAUG,IAAV,CAApC,EAAqDK,IAArD,CAA0D,UAACC,KAAD,EAAU;AAChEF,4BAAMG,GAAN,CAAUP,IAAV,EAAgBM,KAAhB;;AACAP,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,KAArB;AACH,GAHD,WAGS,UAACI,GAAD,EAAS;AAAA,QACNC,OADM,GACMD,GADN,CACNC,OADM;AAEdZ,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,MAAAA,OAAO,EAAPA;AAAF,KAArB;AACH,GAND;AAOH,CATD;AAWAjB,MAAM,CAACa,GAAP,CAAW,QAAX,EAAqB,UAACT,GAAD,EAAMC,GAAN,EAAc;AAAA,MACvBC,IADuB,GACdF,GAAG,CAACG,MADU,CACvBD,IADuB;AAAA,MAEjBY,SAFiB,GAEHd,GAFG,CAEvBe,IAFuB;AAG/BX,EAAAA,gBAAgB,CAACY,eAAjB,CAAiCd,IAAjC,EAAuCY,SAAvC,EAAkDP,IAAlD,CAAuD,UAACC,MAAD,EAAU;AAC7DF,4BAAMG,GAAN,CAAUP,IAAV,EAAgBM,MAAhB;;AACAP,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,MAArB;AACH,GAHD,WAGS,UAACI,GAAD,EAAS;AAAA,QACNC,OADM,GACMD,GADN,CACNC,OADM;AAEdZ,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,MAAAA,OAAO,EAAPA;AAAF,KAArB;AACH,GAND;AAOH,CAVD;AAYAjB,MAAM,CAACqB,IAAP,CAAY,GAAZ,EAAiB,UAACjB,GAAD,EAAMC,GAAN,EAAc;AAAA,MACba,SADa,GACCd,GADD,CACnBe,IADmB;AAE3BX,EAAAA,gBAAgB,CAACc,eAAjB,CAAiCJ,SAAjC,EAA4CP,IAA5C,CAAiD,UAACC,MAAD,EAAU;AACvDW,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACAd,4BAAMG,GAAN,CAAUD,MAAI,CAACN,IAAf,EAAqBM,MAArB;;AACAP,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,MAArB;AACH,GAJD,WAIS,UAACI,GAAD,EAAS;AAAA,QACNC,OADM,GACMD,GADN,CACNC,OADM;AAEdZ,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,MAAAA,OAAO,EAAPA;AAAF,KAArB;AACH,GAPD;AAQH,CAVD;eAYejB,M","sourcesContent":["import express from 'express';\nimport cache from 'memory-cache';\nimport * as characterService from './characterService';\n\nconst router = express.Router();\n\nrouter.get('/:hash', (req, res) => {\n    const { hash } = req.params;\n    characterService.getCharacter(hash, cache.get(hash)).then((char) => {\n        cache.put(hash, char);\n        res.status(200).send(char);\n    }).catch((err) => {\n        const { message } = err;\n        res.status(400).send({ message });\n    })\n});\n\nrouter.put('/:hash', (req, res) => {\n    const { hash } = req.params;\n    const { body: character } = req;\n    characterService.updateCharacter(hash, character).then((char) => {\n        cache.put(hash, char);\n        res.status(200).send(char);\n    }).catch((err) => {\n        const { message } = err;\n        res.status(400).send({ message });\n    });\n})\n\nrouter.post('/', (req, res) => {\n    const { body: character } = req;\n    characterService.createCharacter(character).then((char) => {\n        console.log('hey');\n        cache.put(char.hash, char);\n        res.status(201).send(char);\n    }).catch((err) => {\n        const { message } = err;\n        res.status(400).send({ message });\n    });\n});\n\nexport default router;"],"file":"characterController.js"}
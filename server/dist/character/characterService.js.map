{"version":3,"sources":["../../src/character/characterService.js"],"names":["getCharacter","hash","cache","Character","find","char","foundChar","toJSON","FeatService","getFeatsById","talentosAdicionados","updateCharacter","character","findByIdAndUpdate","_id","updated","createCharacter","console","log","HashService","createHash","charObj","create"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,YAAY;AAAA,2FAAG,iBAAOC,IAAP,EAAaC,KAAb;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBACbA,KADa;AAAA;AAAA;AAAA;;AAAA,6CACCA,KADD;;AAAA;AAAA;AAAA,mBAEEC,sBAAUC,IAAV,CAAe;AAAEH,cAAAA,IAAI,EAAJA;AAAF,aAAf,CAFF;;AAAA;AAEXI,YAAAA,KAFW;AAGjB,qCAAcA,KAAd,EAAoB,WAApB;AACMC,YAAAA,SAJW,GAICD,KAAI,CAAC,CAAD,CAAJ,CAAQE,MAAR,EAJD;AAAA;AAAA,mBAKqBC,WAAW,CAACC,YAAZ,CAAyBH,SAAS,CAACI,mBAAnC,CALrB;;AAAA;AAKjBJ,YAAAA,SAAS,CAACI,mBALO;AAAA,6CAMVJ,SANU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZN,YAAY;AAAA;AAAA;AAAA,GAAlB;;;;AASA,IAAMW,eAAe;AAAA,4FAAG,kBAAOV,IAAP,EAAaW,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACET,sBAAUU,iBAAV,CAClBD,SAAS,CAACE,GADQ,EACHF,SADG,EACQ;AAAE,qBAAK;AAAP,aADR,CADF;;AAAA;AACdG,YAAAA,OADc;AAIpB,qCAAcA,OAAd,EAAuB,WAAvB;AAJoB,8CAKbA,OALa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfJ,eAAe;AAAA;AAAA;AAAA,GAArB;;;;AAQA,IAAMK,eAAe;AAAA,4FAAG,kBAAOJ,SAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACpBK,YAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AADoB;AAAA,mBAEDO,WAAW,CAACC,UAAZ,EAFC;;AAAA;AAEdnB,YAAAA,IAFc;AAGdoB,YAAAA,OAHc,mCAGCT,SAHD;AAGYX,cAAAA,IAAI,EAAEA,IAAI,CAACA;AAHvB;AAAA;AAAA,mBAIDE,sBAAUmB,MAAV,CAAiBD,OAAjB,CAJC;;AAAA;AAIdhB,YAAAA,MAJc;AAAA,8CAKbA,MALa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfW,eAAe;AAAA;AAAA;AAAA,GAArB","sourcesContent":["import * as HashService from '../hash/HashService';\nimport * as FeatService from '../feats/featService';\nimport Character from './Character';\nimport { checkNotFound } from  '../lib/util';\n\nconst getCharacter = async (hash, cache) => {\n    if (cache) return cache;\n    const char = await Character.find({ hash });\n    checkNotFound(char, 'Character');\n    const foundChar = char[0].toJSON();\n    foundChar.talentosAdicionados = await FeatService.getFeatsById(foundChar.talentosAdicionados);\n    return foundChar;\n};\n\nconst updateCharacter = async (hash, character) => {\n    const updated = await Character.findByIdAndUpdate(\n        character._id, character, { new: true }\n    );\n    checkNotFound(updated, 'Character');\n    return updated;\n};\n\nconst createCharacter = async (character) => {\n    console.log(character);\n    const hash = await HashService.createHash();\n    const charObj = { ...character, hash: hash.hash };\n    const char = await Character.create(charObj);\n    return char;\n};\n\nexport {\n    getCharacter,\n    updateCharacter,\n    createCharacter,\n}\n"],"file":"characterService.js"}
{"version":3,"sources":["../../src/character/characterService.js"],"names":["getCharacter","hash","cache","Character","find","char","updateCharacter","character","findByIdAndUpdate","_id","updated","createCharacter","HashService","createHash","charObj","create"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;AAEA,IAAMA,YAAY;AAAA,2FAAG,iBAAOC,IAAP,EAAaC,KAAb;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBACbA,KADa;AAAA;AAAA;AAAA;;AAAA,6CACCA,KADD;;AAAA;AAAA;AAAA,mBAEEC,sBAAUC,IAAV,CAAe;AAAEH,cAAAA,IAAI,EAAJA;AAAF,aAAf,CAFF;;AAAA;AAEXI,YAAAA,KAFW;AAGjB,qCAAcA,KAAd,EAAoB,WAApB;AAHiB,6CAIVA,KAAI,CAAC,CAAD,CAJM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZL,YAAY;AAAA;AAAA;AAAA,GAAlB;;;;AAOA,IAAMM,eAAe;AAAA,4FAAG,kBAAOL,IAAP,EAAaM,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACEJ,sBAAUK,iBAAV,CAClBD,SAAS,CAACE,GADQ,EACHF,SADG,EACQ;AAAE,qBAAK;AAAP,aADR,CADF;;AAAA;AACdG,YAAAA,OADc;AAIpB,qCAAcA,OAAd,EAAuB,WAAvB;AAJoB,8CAKbA,OALa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfJ,eAAe;AAAA;AAAA;AAAA,GAArB;;;;AAQA,IAAMK,eAAe;AAAA,4FAAG,kBAAOJ,SAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDK,WAAW,CAACC,UAAZ,EADC;;AAAA;AACdZ,YAAAA,IADc;AAEda,YAAAA,OAFc,mCAECP,SAFD;AAEYN,cAAAA,IAAI,EAAEA,IAAI,CAACA;AAFvB;AAAA;AAAA,mBAGDE,sBAAUY,MAAV,CAAiBD,OAAjB,CAHC;;AAAA;AAGdT,YAAAA,MAHc;AAAA,8CAIbA,MAJa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfM,eAAe;AAAA;AAAA;AAAA,GAArB","sourcesContent":["import * as HashService from '../hash/HashService';\nimport Character from './Character';\nimport { checkNotFound } from  '../lib/util';\n\nconst getCharacter = async (hash, cache) => {\n    if (cache) return cache;\n    const char = await Character.find({ hash });\n    checkNotFound(char, 'Character');\n    return char[0];\n};\n\nconst updateCharacter = async (hash, character) => {\n    const updated = await Character.findByIdAndUpdate(\n        character._id, character, { new: true }\n    );\n    checkNotFound(updated, 'Character');\n    return updated;\n};\n\nconst createCharacter = async (character) => {\n    const hash = await HashService.createHash();\n    const charObj = { ...character, hash: hash.hash };\n    const char = await Character.create(charObj);\n    return char;\n};\n\nexport {\n    getCharacter,\n    updateCharacter,\n    createCharacter,\n}\n"],"file":"characterService.js"}